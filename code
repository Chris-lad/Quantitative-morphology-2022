# Loading the packages
library(DESeq2)
library(edgeR)
library(fgsea)
library(qusage)
library(ggplot2)
library(corrplot)
library(vegan)
library(lessR)
library(ggcorrplot)
library(hrbrthemes)
library(devtools)
library(factoextra)
library(FactoMineR)


# Reading the clinical data, taking as rownames the unique IDs of the organs (SMPLID)
clinical.data = read.delim(file='clinical-data.tsv',sep ='\t',header=TRUE,row.names=1)

# Reading the morphological counts, taking as rownames the unique IDs of the organs (SMPLID)
morphological.counts = read.delim(file='morphological-counts.tsv',sep='\t',header=TRUE,row.names=1)

# Reading the RNA-read-counts, taking as rownames the unique IDs of the genes (ENSEMBL ID)
RNA.read.counts = read.delim(file='RNA-read-counts.tsv',sep='\t',header=TRUE,row.names=1)

# Reading the gmt file
c2.cp.reactome.v7.5.1.symbols=read.delim('c2.cp.reactome.v7.5.1.symbols.gmt',sep='\t',header=FALSE)

## Creating a vector for each clinical variable
Sex <- clinical.data$SEX
Age <- clinical.data$AGE
Height <- clinical.data$HGHT
Weight <- clinical.data$WGHT
BMI <- clinical.data$BMI
IschemicTime <- clinical.data$TRISCHD
HardyScale <- clinical.data$DTHHRDY
Cohort <- clinical.data$COHORT


## Checking if any NA in vector ---> should Return FALSE
any(is.na(HardyScale))
any(is.na(Cohort))
any(is.na(IschemicTime))
any(is.na(Age))
any(is.na(BMI))
any(is.na(Height))
any(is.na(Weight))
any(is.na(Sex))


#### PART 3 (Question 1)

############ PART 3.1: DISTRIBUTION OF THE CLINICAL VARIABLES 

# Checking that we only have men in our dataset
men.data <- subset(clinical.data,Sex == 1)
print(nrow(men.data) == nrow(clinical.data)) 
#we still have just as many rows in each dataset, ie no organs were removed due to having belonged to a woman -> there are only men

# histogram of the Age, with mean and median lines
hist(Age)
abline(v=mean(Age),col="red",lwd=2)
abline(v=median(Age),col="blue",lwd=2)
text(x = 30,
     y = 20, 
     paste("Mean =", round(mean(Age))),
     col = "red",
     cex = 1)
  
text(x = 30,
     y = 22,
     paste("Median =", round(median(Age))),
     col = "blue",
     cex = 1)
     
print(median(Age))

# histogram of Height, with mean line
hist(Height)
abline(v=mean(Height),col="red",lwd=2)

# histogram of Weight, with mean line
hist(Weight)
abline(v=mean(Weight),col="red",lwd=2)

# histogram of BMI, with mean line
hist(BMI)
abline(v=mean(BMI),col="red",lwd=2)

# histogram of the Ischemic time, with mean line
hist(IschemicTime, xlab='Ischemic Time (min)')
abline(v=mean(IschemicTime),col="red",lwd=2)

# Distribution of data according to the HardyScale
hist(HardyScale)
abline(v=mean(HardyScale),col="red",lwd=2)

# THE VISUAL EXPLORATION IS NOT ENOUGH TO CONCLUDE IF SOME VARIABLES ARE 
# NORMALLY DISTRIBUTED OR NOT, a formal normality test is necessary. 

# Shapiro test for Age
shapiro.test(Age)
# Shapiro test for BMI
shapiro.test(BMI)
# Shapiro test for HardyScale
shapiro.test(HardyScale)
# Shapiro test for Height
shapiro.test(Height)
# Shapiro test for IschemicTime
shapiro.test(IschemicTime)
# Shapiro test for Sex
#shapiro.test(Sex) # all 'x' values are identical
# Shapiro test for Weight
shapiro.test(Weight)

## THE SHAPIRO-TEST CONFIRMED THAT NONE OF THE CLINICAL VARIABLE, EXCEPT FOR WGHT, ARE
## NORMALLY DISTRIBUTED AS ALL THE P-VALUES WERE VERY VERY LOW.
## WE CAN NOT ASSUME NORMALITY FOR THESE VARIABLES

### Barlett test to verify the homogeneity of variances between the 5 non-constant variables (excluding SEX, which has a variance of 0)
bartlett.test(list(Age, BMI, Height, Weight, IschemicTime))

## Printing the contingency table of the categorical variables 

table(Cohort)
table(HardyScale)


## Creating barplot Hardy Scale
barplot(table(HardyScale), xlab = 'Hardy Scale',
        ylab = 'count', col='blue')


# Creating a barplot of the donor type
barplot(table(Cohort), xlab = 'Type of donor',
        ylab = 'count', col='blue')


############ PART 3.2: Correlations between clinical variables

# Visualization of the relation between variables
#pairs(clinical_data) #--> ain't working bc variables(are not integer)
pairs(~ Age + Height + Weight + BMI + IschemicTime)

# Creating a dataframe containing only the numerical variables. 
num.var <- clinical.data[, c("AGE", "HGHT", "WGHT", "BMI", "TRISCHD")]

# Computation of the Matrix of correlation
correlation = cor(num.var, method = "spearman")
correlation <- round(correlation,2)
print(correlation)

# Correlogram is a graph of correlation matrix
corrplot(correlation) #with just colours
corrplot(correlation, order = 'AOE', addCoef.col = 'black', tl.pos = 'd',
         cl.pos = 'n', col = COL2('PiYG')) #with colours and values

# Scatter plot btw Weight and BMI and linear regression line.
plot(BMI, Weight, pch = 16)
abline(lm(Weight ~ BMI), col = "red", lwd = 3)
#Correlation test
cor.test(Weight,BMI,method = "spearman")

# Scatter plot btw Weight and Height and linear regression line.
plot(Weight, Height, pch = 16)
abline(lm(Height ~ Weight), col = "red", lwd = 3)
#Correlation test

# Scatter plot btw Age and Ischemic time and linear regression line.
plot(IschemicTime, Age, pch = 16)
abline(lm(Age ~ IschemicTime), col = "red", lwd = 3)
#Correlation test

############ PART 3.3: Confounding clinical variables

# Test de Wilcoxon-Whithney de l'age et de la cohorte
# The post-mortem patients are older than the Organ Donor patients
boxplot(Age ~ Cohort)
# Test of Wilcoxon Mann-Withney <- Les Deux groupes sont bien diffÃ©rents car rejet de H0
# H0 = 2 populations (observations) sont elles les memes ? 
wilcox.test(Age ~ Cohort, data=ToothGrowth)

# --> Useless # A basic scatterplot BMI vs Weight with color
#     depending on donor type
ggplot(clinical.data, aes(x=BMI, y=WGHT, color=COHORT)) + 
  geom_point(size=6) +
  theme_ipsum()

## 
# --> Useless  # A basic scatterplot BMI vs Weight with color
#     depending on Hardy scale
ggplot(clinical.data, aes(x=BMI, y=WGHT, color=DTHHRDY)) + 
  geom_point(size=6) +
  theme_ipsum()

# --> Useless # Scatter plot Weight vs Height depending on donor type
ggplot(clinical.data, aes(x=WGHT, y=HGHT, color=COHORT)) + 
  geom_point(size=6) +
  theme_ipsum()

# --> Useless # Scatter plot Weight vs Height depending on Hardy Scale
ggplot(clinical.data, aes(x=WGHT, y=HGHT, color=DTHHRDY)) + 
  geom_point(size=6) +
  theme_ipsum()

# Scatter plot of ischemic time vs Age depending on the cohort
plot(IschemicTime, Age, pch = 16, col=factor(Cohort))


# Legend
legend("bottomright",
       legend = levels(factor(Cohort)),
       pch = 19,
       col = factor(levels(factor(Cohort))))


# Scatter plot of ischemic time vs Age depending on the Hardy Scale.
plot(IschemicTime, Age, pch = 16, col=factor(HardyScale))


# Legend
legend("bottomright",
       legend = levels(factor(HardyScale)),
       pch = 19,
       col = factor(levels(factor(HardyScale))))
       
#Grouped barplot for COHORT and DTHHRDY

clinical.data$DTHHRDY <- as.factor(clinical.data$DTHHRDY)
clinical.data$COHORT <- as.factor(clinical.data$COHORT)

compare_table <- table(clinical.data$COHORT,clinical.data$DTHHRDY)

barplot(compare_table,main="Hardy scale",
        col=c("black","red"),beside=TRUE)
legend("topright", legend=c("Organ Donor (OPO)", "Postmortem"),
       col=c("black", "red"), pch=19, cex=0.6)

#Chi-squared test

ventilator <- rep(NA,nrow(clinical.data))
for (i in 1:nrow(clinical.data)){
  if (clinical.data$DTHHRDY[i] == 0){
    ventilator[i] <- 0
  }
  else{
    ventilator[i] <- 1
  }
}

chisq.test(clinical.data$COHORT,ventilator)       
       

## Plotting the scatter plot of correlation between the Age and all 
## the variables in the morphological.count variable. 
morph.num.var = subset(morphological.counts, select = -SMPLID)
cor.mat.clin.morph = cor(num.var, morph.num.var)

# Let us plot the correlation plot
corrplot(cor.mat.clin.morph[,0:9], method='number', addCoef.col = 'black')

corrplot(cor.mat.clin.morph[,0:9], addCoef.col = 'black', tl.pos = 'd',
         cl.pos = 'n')

#PCA analysis
#create a dataset containing only numerical values
num.data <- clinical.data[,-c(1,6,7,9,10,11)]

#pca with printed correlation circle
pca <- PCA(num.data, graph = TRUE)
#print the pca
plot(pca$ind$coord)
#print eigenvalues
print(pca$eig)
#scree plot
fviz_eig(pca, addlabels = TRUE, ylim = c(0, 50))

#print the PCA with coloured Cohort
cohorts <- clinical.data$COHORT
colors <- rep("red",length(cohorts))
colors[cohorts == "Organ Donor (OPO)"] <- "black"
plot(pca$ind$coord,col=colors,pch=19,cex=0.6)
legend("bottomright", legend=c("Organ Donor (OPO)", "Postmortem"),
       col=c("black", "red"), pch=19, cex=0.6)

#print the PCA with coloured hardy scale
hardy <- clinical.data$DTHHRDY
colors <- rep("black",length(hardy))
colors[hardy == 1] <- "red"
colors[hardy == 2] <- "green"
colors[hardy == 3] <- "blue"
colors[hardy == 4] <- "cyan"
plot(pca$ind$coord,col=colors,pch=19,cex=0.6)
legend("bottomright", legend=c("0", "1","2","3","4"),
       col=c("black", "red","green","blue","cyan"), pch=19, cex=0.6)
       
############### Question 2 (Deseq): 

# create the deseqdataset object, change variable design for every variable in clinical.data (Age, Hght etc)
dds <- DESeqDataSetFromMatrix(countData=t(morphological.counts), 
                              colData=clinical.data, 
                              design=~WGHT)
dds <- DESeq(dds)

# compute and visualize results
resultsNames(dds)
res <- results(dds)
res
mcols(res, use.names=TRUE)

#let's look at the results table
head(results(dds, tidy=TRUE))

# order results table according to the adjusted p-value; take the first 10 lines with the lowest padj
res <- res[order(res$padj),]
head(res, 10)

# plot
plotMA(res)

#Version automatique, teste toutes les variables, imprime deux types de plots: padj et log2fold vs mean et stocke valeurs dans une data.frame

sign_padj <- function(res){
  sorted_padj <- res[res$padj<0.1 & is.na(res$padj) == FALSE,]
  increasing_padj <- sort(sorted_padj$padj,index.return=TRUE)$ix
  print(sorted_padj@rownames[increasing_padj])
}

releventVars <- c(2,3,4,5,7,8,9)
VarvsMorpho <- data.frame(matrix(
  NA, nrow = ncol(morphological.counts),
  ncol = length(releventVars)
))
rownames(VarvsMorpho) <- names(morphological.counts)
names(VarvsMorpho) <- names(clinical.data)[releventVars]
for (i in 1:length(releventVars)){
  current_var <- releventVars[i]
  form <- as.formula(paste("~",names(clinical.data)[current_var]))
  dds <- DESeqDataSetFromMatrix(countData = t(morphological.counts),
                                colData = clinical.data, 
                                design=form)
  dds <- DESeq(dds)
  res <- results(dds)
  VarvsMorpho[,i] <- res$padj
  plotMA(res,main=names(clinical.data)[current_var])
  print(names(clinical.data)[current_var])
  sign_padj(res)
}

for (i in 1:ncol(VarvsMorpho)){
  plot(VarvsMorpho[,i], main = names(VarvsMorpho)[i],
       ylab="Adjusted p-value", xlab="Morphological cluster"
      )
  abline(h = 0.1, col = "red")
}


dds <- DESeqDataSetFromMatrix(countData = t(morphological.counts),
                              colData = clinical.data, 
                              design = ~AGE+COHORT+TRISCHD)
dds <- DESeq(dds)
res <- results(dds)
VarvsMorpho[,i] <- res$padj
plotMA(res, main = "~AGE + COHORT + TRISCHD")
plot(res$padj)
abline(h = 0.1, col = "red")
sign_padj(res)

#Correlations des clusters: variables confondues

#fonction replaceNames cree une liste de noms correspondants au chiffre du cluster, plutot que le nom entier
replaceNames <- function(df){
  futureNames <- rep(NA,ncol(df))
  for (i in 1:ncol(df)){
    currentName <- names(df)[i]
    n <- nchar(currentName)
    if (n == 22){
      futureNames[i] <- substr(currentName,n,n)
    }
    else{
      futureNames[i] <- substr(currentName,n-1,n)
    }
  }
  return(futureNames)
}

confMorphs <- morphological.counts[,unlist(morphs[[8]])]
names(confMorphs) <- replaceNames(confMorphs)
cor.test(morphological.counts$Mophological.cluster.50,morphological.counts$Mophological.cluster.23)
corrplot(cor(confMorphs,method="spearman"))
correlation = cor(confMorphs, method = "spearman")
correlation <- round(correlation,2)
corrplot(correlation, order = 'AOE', addCoef.col = 'black', tl.pos = 'd',
         cl.pos = 'n', col = COL2('PiYG'))
